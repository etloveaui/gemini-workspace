============================= test session starts =============================
platform win32 -- Python 3.13.6, pytest-8.4.1, pluggy-1.6.0 -- C:\Users\etlov\multi-agent-workspace\venv\Scripts\python.exe
cachedir: .pytest_cache
rootdir: C:\Users\etlov\multi-agent-workspace
configfile: pytest.ini
testpaths: tests
collecting ... collected 31 items

tests/test_ai_provider.py::test_interactive_updates_provider PASSED      [  3%]
tests/test_ai_provider.py::test_main_reads_provider PASSED               [  6%]
tests/test_context_engine.py::test_retrieval_accuracy PASSED             [  9%]
tests/test_context_engine.py::test_summarization PASSED                  [ 12%]
tests/test_context_engine.py::test_prompt_assembly PASSED                [ 16%]
tests/test_core_systems.py::test_index_creation PASSED                   [ 19%]
tests/test_core_systems.py::test_runner_error_logging SKIPPED (Direct
testing of run_command error logging in usage.db requires SQLite DB
access or a dedicated error-inducing invoke task.)                       [ 22%]
tests/test_core_systems.py::test_wip_commit_protocol PASSED              [ 25%]
tests/test_help_system.py::test_invoke_help FAILED                       [ 29%]
tests/test_messages.py::test_append_decision PASSED                      [ 32%]
tests/test_organizer.py::test_classification_logic PASSED                [ 35%]
tests/test_organizer.py::test_idempotency_and_move_plan PASSED           [ 38%]
tests/test_organizer.py::test_end_to_end_execution_with_collision PASSED [ 41%]
tests/test_organizer.py::test_user_cancellation PASSED                   [ 45%]
tests/test_p0_rules.py::test_runner_error_logging PASSED                 [ 48%]
tests/test_p0_rules.py::test_debug_19_doc_exists PASSED                  [ 51%]
tests/test_p0_rules.py::test_debug20_doc_exists PASSED                   [ 54%]
tests/test_p1_file_agent.py::test_list_rules PASSED                      [ 58%]
tests/test_p1_file_agent.py::test_explain_rule PASSED                    [ 61%]
tests/test_p1_file_agent.py::test_dry_run_does_not_modify_file SKIPPED   [ 64%]
tests/test_p1_file_agent.py::test_apply_modifies_file SKIPPED (경로 검증 로직
수정 필요 - 임시 디렉터리가 workspace 외부)                              [ 67%]
tests/test_p1_file_agent.py::test_idempotency SKIPPED (경로 검증 로직 수정 필요 -
임시 디렉터리가 workspace 외부)                                          [ 70%]
tests/test_p1_file_agent.py::test_unknown_rule_fails_gracefully PASSED   [ 74%]
tests/test_p1_file_agent.py::test_boundary_check_fails_for_outside_path SKIPPED [ 77%]
tests/test_p1_file_agent.py::test_syntax_error_in_file_fails_gracefully SKIPPED [ 80%]
tests/test_p1_web_tool.py::test_web_agent_with_mocked_search SKIPPED (한글
인코딩 문제로 검증 불가 - 인코딩 문제 해결 후 재시도)                    [ 83%]
tests/test_p1_web_tool.py::test_invoke_search_task SKIPPED (한글 인코딩 문제로
검증 불가 - 인코딩 문제 해결 후 재시도)                                  [ 87%]
tests/test_session_logger.py::test_concurrent_appends PASSED             [ 90%]
tests/test_ux_enhancements.py::test_invoke_doctor PASSED                 [ 93%]
tests/test_ux_enhancements.py::test_invoke_quickstart FAILED             [ 96%]
tests/test_ux_enhancements.py::test_invoke_help_getting_started PASSED   [100%]

================================== FAILURES ===================================
______________________________ test_invoke_help _______________________________

    def test_invoke_help():
        """Verify that `invoke help` runs without errors and shows key sections."""
        proc = run_invoke("help")
        assert proc.returncode == 0
>       assert "[RUN:help]" in proc.stdout
E       assert '[RUN:help]' in "=== RUN help ===\nagent: gemini\nargs: ['C:\\\\Users\\\\eunta\\\\multi-agent-workspace\\\\venv\\\\Scripts\\\\python.exe', 'scripts/help.py', 'all']\ncwd: C:\\Users\\etlov\\multi-agent-workspace\n"
E        +  where "=== RUN help ===\nagent: gemini\nargs: ['C:\\\\Users\\\\eunta\\\\multi-agent-workspace\\\\venv\\\\Scripts\\\\python.exe', 'scripts/help.py', 'all']\ncwd: C:\\Users\\etlov\\multi-agent-workspace\n" = CompletedProcess(args=['C:\\Users\\etlov\\multi-agent-workspace\\venv\\Scripts\\python.exe', '-m', 'invoke', 'help'], returncode=0, stdout="=== RUN help ===\nagent: gemini\nargs: ['C:\\\\Users\\\\eunta\\\\multi-agent-workspace\\\\venv\\\\Scripts\\\\python.exe', 'scripts/help.py', 'all']\ncwd: C:\\Users\\etlov\\multi-agent-workspace\n", stderr='').stdout

tests\test_help_system.py:22: AssertionError
___________________________ test_invoke_quickstart ____________________________

    def test_invoke_quickstart():
        """Verify that `invoke quickstart` runs and shows expected strings."""
        proc = run_script("quickstart.py")
        assert proc.returncode == 0
>       assert "환영합니다" in proc.stdout or "가상 환경" in proc.stdout
E       AssertionError: assert ('\ud658\uc601\ud569\ub2c8\ub2e4' in '=== Quickstart ===\n1) Create and activate venv\n   - python -m venv venv\n   - .\\venv\\Scripts\\activate (Windows)\n   - source venv/bin/activate (Linux/macOS)\n2) Install requirements\n   - pip install -r requirements.txt\n3) Start session\n   - invoke start\n4) Run diagnostics\n   - invoke test\n5) More help\n   - invoke help\n' or '\uac00\uc0c1 \ud658\uacbd' in '=== Quickstart ===\n1) Create and activate venv\n   - python -m venv venv\n   - .\\venv\\Scripts\\activate (Windows)\n   - source venv/bin/activate (Linux/macOS)\n2) Install requirements\n   - pip install -r requirements.txt\n3) Start session\n   - invoke start\n4) Run diagnostics\n   - invoke test\n5) More help\n   - invoke help\n')
E        +  where '=== Quickstart ===\n1) Create and activate venv\n   - python -m venv venv\n   - .\\venv\\Scripts\\activate (Windows)\n   - source venv/bin/activate (Linux/macOS)\n2) Install requirements\n   - pip install -r requirements.txt\n3) Start session\n   - invoke start\n4) Run diagnostics\n   - invoke test\n5) More help\n   - invoke help\n' = CompletedProcess(args=['C:\\Users\\etlov\\multi-agent-workspace\\venv\\Scripts\\python.exe', 'C:\\Users\\etlov\\multi-agent-workspace\\tests\\..\\scripts\\quickstart.py'], returncode=0, stdout='=== Quickstart ===\n1) Create and activate venv\n   - python -m venv venv\n   - .\\venv\\Scripts\\activate (Windows)\n   - source venv/bin/activate (Linux/macOS)\n2) Install requirements\n   - pip install -r requirements.txt\n3) Start session\n   - invoke start\n4) Run diagnostics\n   - invoke test\n5) More help\n   - invoke help\n', stderr='').stdout
E        +  and   '=== Quickstart ===\n1) Create and activate venv\n   - python -m venv venv\n   - .\\venv\\Scripts\\activate (Windows)\n   - source venv/bin/activate (Linux/macOS)\n2) Install requirements\n   - pip install -r requirements.txt\n3) Start session\n   - invoke start\n4) Run diagnostics\n   - invoke test\n5) More help\n   - invoke help\n' = CompletedProcess(args=['C:\\Users\\etlov\\multi-agent-workspace\\venv\\Scripts\\python.exe', 'C:\\Users\\etlov\\multi-agent-workspace\\tests\\..\\scripts\\quickstart.py'], returncode=0, stdout='=== Quickstart ===\n1) Create and activate venv\n   - python -m venv venv\n   - .\\venv\\Scripts\\activate (Windows)\n   - source venv/bin/activate (Linux/macOS)\n2) Install requirements\n   - pip install -r requirements.txt\n3) Start session\n   - invoke start\n4) Run diagnostics\n   - invoke test\n5) More help\n   - invoke help\n', stderr='').stdout

tests\test_ux_enhancements.py:24: AssertionError
=========================== short test summary info ===========================
FAILED tests/test_help_system.py::test_invoke_help - assert '[RUN:help]' in "=== RUN help ===\nagent: gemini\nargs: ['C:\\\\Users\\\\eunta\\\\multi-agent-workspace\\\\venv\\\\Scripts\\\\python.exe', 'scripts/help.py', 'all']\ncwd: C:\\Users\\etlov\\multi-agent-workspace\n"
 +  where "=== RUN help ===\nagent: gemini\nargs: ['C:\\\\Users\\\\eunta\\\\multi-agent-workspace\\\\venv\\\\Scripts\\\\python.exe', 'scripts/help.py', 'all']\ncwd: C:\\Users\\etlov\\multi-agent-workspace\n" = CompletedProcess(args=['C:\\Users\\etlov\\multi-agent-workspace\\venv\\Scripts\\python.exe', '-m', 'invoke', 'help'], returncode=0, stdout="=== RUN help ===\nagent: gemini\nargs: ['C:\\\\Users\\\\eunta\\\\multi-agent-workspace\\\\venv\\\\Scripts\\\\python.exe', 'scripts/help.py', 'all']\ncwd: C:\\Users\\etlov\\multi-agent-workspace\n", stderr='').stdout
FAILED tests/test_ux_enhancements.py::test_invoke_quickstart - AssertionError: assert ('\ud658\uc601\ud569\ub2c8\ub2e4' in '=== Quickstart ===\n1) Create and activate venv\n   - python -m venv venv\n   - .\\venv\\Scripts\\activate (Windows)\n   - source venv/bin/activate (Linux/macOS)\n2) Install requirements\n   - pip install -r requirements.txt\n3) Start session\n   - invoke start\n4) Run diagnostics\n   - invoke test\n5) More help\n   - invoke help\n' or '\uac00\uc0c1 \ud658\uacbd' in '=== Quickstart ===\n1) Create and activate venv\n   - python -m venv venv\n   - .\\venv\\Scripts\\activate (Windows)\n   - source venv/bin/activate (Linux/macOS)\n2) Install requirements\n   - pip install -r requirements.txt\n3) Start session\n   - invoke start\n4) Run diagnostics\n   - invoke test\n5) More help\n   - invoke help\n')
 +  where '=== Quickstart ===\n1) Create and activate venv\n   - python -m venv venv\n   - .\\venv\\Scripts\\activate (Windows)\n   - source venv/bin/activate (Linux/macOS)\n2) Install requirements\n   - pip install -r requirements.txt\n3) Start session\n   - invoke start\n4) Run diagnostics\n   - invoke test\n5) More help\n   - invoke help\n' = CompletedProcess(args=['C:\\Users\\etlov\\multi-agent-workspace\\venv\\Scripts\\python.exe', 'C:\\Users\\etlov\\multi-agent-workspace\\tests\\..\\scripts\\quickstart.py'], returncode=0, stdout='=== Quickstart ===\n1) Create and activate venv\n   - python -m venv venv\n   - .\\venv\\Scripts\\activate (Windows)\n   - source venv/bin/activate (Linux/macOS)\n2) Install requirements\n   - pip install -r requirements.txt\n3) Start session\n   - invoke start\n4) Run diagnostics\n   - invoke test\n5) More help\n   - invoke help\n', stderr='').stdout
 +  and   '=== Quickstart ===\n1) Create and activate venv\n   - python -m venv venv\n   - .\\venv\\Scripts\\activate (Windows)\n   - source venv/bin/activate (Linux/macOS)\n2) Install requirements\n   - pip install -r requirements.txt\n3) Start session\n   - invoke start\n4) Run diagnostics\n   - invoke test\n5) More help\n   - invoke help\n' = CompletedProcess(args=['C:\\Users\\etlov\\multi-agent-workspace\\venv\\Scripts\\python.exe', 'C:\\Users\\etlov\\multi-agent-workspace\\tests\\..\\scripts\\quickstart.py'], returncode=0, stdout='=== Quickstart ===\n1) Create and activate venv\n   - python -m venv venv\n   - .\\venv\\Scripts\\activate (Windows)\n   - source venv/bin/activate (Linux/macOS)\n2) Install requirements\n   - pip install -r requirements.txt\n3) Start session\n   - invoke start\n4) Run diagnostics\n   - invoke test\n5) More help\n   - invoke help\n', stderr='').stdout
=================== 2 failed, 21 passed, 8 skipped in 4.30s ===================
