#!/bin/bash
# GitHub Desktop 호환 pre-commit 훅
# Windows 인코딩 문제 해결

export PYTHONUTF8=1
export PYTHONIOENCODING=UTF-8

# 환경 변수로 훅 건너뛰기 허용
if [[ "$AGENTS_SKIP_HOOKS" == "1" || "$AGENTS_SKIP_HOOKS" == "true" ]]; then
    exit 0
fi

# config.json에서 훅 설정 확인 (Python 없이)
CONFIG_FILE=".agents/config.json"
if [[ -f "$CONFIG_FILE" ]]; then
    # jq가 없어도 작동하도록 간단한 grep 사용
    if grep -q '"enabled".*false' "$CONFIG_FILE" 2>/dev/null; then
        exit 0
    fi
fi

# GitHub Desktop에서는 Python 스크립트 실행 시 오류 발생할 수 있으므로
# 기본적인 체크만 수행
echo "pre-commit: GitHub Desktop 호환 모드로 실행"

# 간단한 파일 체크만 수행 (Python 스크립트 실행 안함)
staged_files=$(git diff --cached --name-only)

# .gemini/ 폴더의 민감 파일 체크
if echo "$staged_files" | grep -E "\.gemini/.*(oauth|creds|token|secret)" >/dev/null 2>&1; then
    echo "ERROR: .gemini/ 민감 파일이 스테이지에 있습니다!"
    echo "다음 명령으로 제거하세요: git reset HEAD -- .gemini/"
    exit 1
fi

# projects/ 폴더 체크
if echo "$staged_files" | grep "^projects/" >/dev/null 2>&1; then
    echo "WARNING: projects/ 폴더 파일이 스테이지에 있습니다."
    echo "projects/ 폴더는 독립 Git 리포지토리입니다."
fi

echo "pre-commit: GitHub Desktop 호환 체크 완료"
exit 0
